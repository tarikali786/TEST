{"ast":null,"code":"export function createUser(userData) {\n  try {\n    return new Promise(async (resolve, reject) => {\n      const response = await fetch(\"/api/v1/auth/signup\", {\n        method: \"POST\",\n        body: JSON.stringify(userData),\n        headers: {\n          \"Content-Type\": \"application/json\"\n        }\n      });\n      if (response.ok) {\n        const data = await response.json();\n        resolve(data);\n      } else {\n        const err = await response.json();\n        reject({\n          err\n        });\n      }\n    });\n  } catch (error) {\n    console.log(error);\n  }\n}\nexport function checkDataExist(userData) {\n  try {\n    return new Promise(async (resolve, reject) => {\n      const response = await fetch(\"/api/v1/auth/checkdata\", {\n        method: \"POST\",\n        body: JSON.stringify(userData),\n        headers: {\n          \"Content-Type\": \"application/json\"\n        }\n      });\n      // if (response.ok) {\n      const data = await response.json();\n      resolve({\n        data\n      });\n      // } else {\n      // const err = await response.json();\n      // reject({ err });\n      // }\n    });\n  } catch (error) {\n    console.log(error);\n  }\n}\nexport function login(loginInfo) {\n  try {\n    return new Promise(async (resolve, reject) => {\n      const response = await fetch(`/api/v1/auth/signin`, {\n        method: \"POST\",\n        body: JSON.stringify(loginInfo),\n        headers: {\n          \"Content-Type\": \"application/json\"\n        }\n      });\n      if (response.ok) {\n        const data = await response.json();\n        resolve({\n          data\n        });\n      } else {\n        const err = await response.json();\n        reject({\n          err\n        });\n      }\n    });\n  } catch (error) {\n    console.log(error);\n  }\n}\nexport function CheckAuth() {\n  try {\n    return new Promise(async (resolve, reject) => {\n      const response = await fetch(`/api/v1/auth/check`);\n      if (response.ok) {\n        const data = await response.json();\n        resolve({\n          data\n        });\n      } else {\n        const err = await response.json();\n        reject({\n          err\n        });\n      }\n    });\n  } catch (error) {\n    console.log(error);\n  }\n}\n_c = CheckAuth;\nexport function signOut() {\n  try {\n    return new Promise(async (resolve, reject) => {\n      const response = await fetch(`/api/v1/auth/signout`, {\n        method: \"DELETE\",\n        body: JSON.stringify(),\n        headers: {\n          \"Content-Type\": \"application/json\"\n        }\n      });\n      if (response.ok) {\n        const data = await response.json();\n        resolve({\n          data\n        });\n      } else {\n        const err = await response.json();\n        reject({\n          err\n        });\n      }\n    });\n  } catch (error) {\n    console.log(error);\n  }\n}\nexport function UpdateAuth(update) {\n  try {\n    return new Promise(async resolve => {\n      const response = await fetch(\"/api/v1/auth/user/\", {\n        method: \"PUT\",\n        body: JSON.stringify(update),\n        headers: {\n          \"Content-Type\": \"application/json\"\n        }\n      });\n      const data = await response.json();\n      resolve({\n        data\n      });\n    });\n  } catch (error) {\n    console.log(error);\n  }\n}\n_c2 = UpdateAuth;\nvar _c, _c2;\n$RefreshReg$(_c, \"CheckAuth\");\n$RefreshReg$(_c2, \"UpdateAuth\");","map":{"version":3,"names":["createUser","userData","Promise","resolve","reject","response","fetch","method","body","JSON","stringify","headers","ok","data","json","err","error","console","log","checkDataExist","login","loginInfo","CheckAuth","_c","signOut","UpdateAuth","update","_c2","$RefreshReg$"],"sources":["/home/tarik/Downloads/frontend-la-develop/src/features/auth/authAPI.js"],"sourcesContent":["export function createUser(userData) {\n  try {\n    return new Promise(async (resolve, reject) => {\n      const response = await fetch(\"/api/v1/auth/signup\", {\n        method: \"POST\",\n        body: JSON.stringify(userData),\n        headers: {\n          \"Content-Type\": \"application/json\",\n        },\n      });\n      if (response.ok) {\n        const data = await response.json();\n        resolve( data );\n      } else {\n        const err = await response.json();\n        reject({ err });\n      }\n    });\n  } catch (error) {\n    console.log(error);\n  }\n}\nexport function checkDataExist(userData) {\n  try {\n    return new Promise(async (resolve, reject) => {\n      const response = await fetch(\"/api/v1/auth/checkdata\", {\n        method: \"POST\",\n        body: JSON.stringify(userData),\n        headers: {\n          \"Content-Type\": \"application/json\",\n        },\n      });\n      // if (response.ok) {\n      const data = await response.json();\n      resolve({ data });\n      // } else {\n      // const err = await response.json();\n      // reject({ err });\n      // }\n    });\n  } catch (error) {\n    console.log(error);\n  }\n}\n\nexport function login(loginInfo) {\n  try {\n    return new Promise(async (resolve, reject) => {\n      const response = await fetch(`/api/v1/auth/signin`, {\n        method: \"POST\",\n        body: JSON.stringify(loginInfo),\n        headers: { \"Content-Type\": \"application/json\" },\n      });\n      if (response.ok) {\n        const data = await response.json();\n        resolve({ data });\n      } else {\n        const err = await response.json();\n        reject({ err });\n      }\n    });\n  } catch (error) {\n    console.log(error);\n  }\n}\nexport function CheckAuth() {\n  try {\n    return new Promise(async (resolve, reject) => {\n      const response = await fetch(`/api/v1/auth/check`);\n      if (response.ok) {\n        const data = await response.json();\n        resolve({ data });\n        \n      } else {\n        const err = await response.json();\n        reject({ err });\n      }\n    });\n  } catch (error) {\n    console.log(error);\n  }\n}\nexport function signOut() {\n  try {\n    return new Promise(async (resolve, reject) => {\n      const response = await fetch(`/api/v1/auth/signout`, {\n        method: \"DELETE\",\n        body: JSON.stringify(),\n        headers: { \"Content-Type\": \"application/json\" },\n      });\n      if (response.ok) {\n        const data = await response.json();\n        resolve({ data });\n      } else {\n        const err = await response.json();\n        reject({ err });\n      }\n    });\n  } catch (error) {\n    console.log(error);\n  }\n}\nexport function UpdateAuth(update) {\n  try {\n    return new Promise(async (resolve) => {\n      const response = await fetch(\"/api/v1/auth/user/\", {\n        method: \"PUT\",\n        body: JSON.stringify(update),\n        headers: {\n          \"Content-Type\": \"application/json\",\n        },\n      });\n      const data = await response.json();\n      resolve({ data });\n    });\n  } catch (error) {\n    console.log(error);\n  }\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}