{"ast":null,"code":"import { createAsyncThunk, createSlice } from \"@reduxjs/toolkit\";\nimport { transactionUpdate, transactions } from \"./transactionsAPI\";\nconst initialState = {\n  message: null,\n  error: null,\n  total: 0,\n  totalPages: 0,\n  data: [],\n  status: \"idle\"\n};\nexport const transactionsAsync = createAsyncThunk(\"transactions\", async senData => {\n  const response = await transactions(senData);\n  return response.data;\n});\nexport const transactionUpdateAsync = createAsyncThunk(\"transactions/update\", async (senData, {\n  rejectWithValue\n}) => {\n  try {\n    const response = await transactionUpdate(senData);\n    return response.data;\n  } catch (error) {\n    return rejectWithValue(error);\n  }\n});\nexport const Slice = createSlice({\n  name: \"transactions\",\n  initialState,\n  reducers: {\n    clearMessage: state => {\n      state.message = null;\n    },\n    clearError: state => {\n      state.error = null;\n    }\n  },\n  extraReducers: builder => {\n    builder.addCase(transactionsAsync.pending, state => {\n      state.status = \"loading\";\n    }).addCase(transactionsAsync.fulfilled, (state, action) => {\n      var _action$payload, _action$payload2, _action$payload3;\n      state.status = \"idle\";\n      state.data = ((_action$payload = action.payload) === null || _action$payload === void 0 ? void 0 : _action$payload.data) || [];\n      state.total = ((_action$payload2 = action.payload) === null || _action$payload2 === void 0 ? void 0 : _action$payload2.total) || 0;\n      state.totalPages = ((_action$payload3 = action.payload) === null || _action$payload3 === void 0 ? void 0 : _action$payload3.totalPages) || 0;\n    }).addCase(transactionsAsync.rejected, (state, action) => {\n      state.status = \"idle\";\n      state.error = action.payload;\n    }).addCase(transactionUpdateAsync.pending, state => {\n      state.status = \"loading\";\n    }).addCase(transactionUpdateAsync.fulfilled, (state, action) => {\n      var _action$payload4;\n      state.status = \"idle\";\n      state.message = (_action$payload4 = action.payload) === null || _action$payload4 === void 0 ? void 0 : _action$payload4.message;\n    }).addCase(transactionUpdateAsync.rejected, (state, action) => {\n      state.status = \"idle\";\n      state.error = action.payload;\n    });\n  }\n});\nexport const {\n  clearMessage,\n  clearError,\n  clearSuccess\n} = Slice.actions;\nexport const selectMessage = state => {\n  var _state$transactions;\n  return ((_state$transactions = state.transactions) === null || _state$transactions === void 0 ? void 0 : _state$transactions.message) || null;\n};\nexport const selectError = state => {\n  var _state$transactions2, _state$transactions2$;\n  return ((_state$transactions2 = state.transactions) === null || _state$transactions2 === void 0 ? void 0 : (_state$transactions2$ = _state$transactions2.error) === null || _state$transactions2$ === void 0 ? void 0 : _state$transactions2$.err) || null;\n};\nexport const selectData = state => {\n  var _state$transactions3;\n  return ((_state$transactions3 = state.transactions) === null || _state$transactions3 === void 0 ? void 0 : _state$transactions3.data) || [];\n};\nexport const selectTotal = state => {\n  var _state$transactions4;\n  return ((_state$transactions4 = state.transactions) === null || _state$transactions4 === void 0 ? void 0 : _state$transactions4.total) || 0;\n};\nexport const selectTotalPages = state => {\n  var _state$transactions5;\n  return ((_state$transactions5 = state.transactions) === null || _state$transactions5 === void 0 ? void 0 : _state$transactions5.totalPages) || 0;\n};\nexport default Slice.reducer;","map":{"version":3,"names":["createAsyncThunk","createSlice","transactionUpdate","transactions","initialState","message","error","total","totalPages","data","status","transactionsAsync","senData","response","transactionUpdateAsync","rejectWithValue","Slice","name","reducers","clearMessage","state","clearError","extraReducers","builder","addCase","pending","fulfilled","action","_action$payload","_action$payload2","_action$payload3","payload","rejected","_action$payload4","clearSuccess","actions","selectMessage","_state$transactions","selectError","_state$transactions2","_state$transactions2$","err","selectData","_state$transactions3","selectTotal","_state$transactions4","selectTotalPages","_state$transactions5","reducer"],"sources":["/home/tarik/Downloads/frontend-la-develop/src/admin/features/transactions/transactionsSlice.js"],"sourcesContent":["import { createAsyncThunk, createSlice } from \"@reduxjs/toolkit\";\nimport { transactionUpdate, transactions } from \"./transactionsAPI\";\n\nconst initialState = {\n  message: null,\n  error: null,\n  total: 0,\n  totalPages: 0,\n  data: [],\n  status: \"idle\",\n};\nexport const transactionsAsync = createAsyncThunk(\n  \"transactions\",\n  async (senData) => {\n    const response = await transactions(senData);\n    return response.data;\n  }\n);\nexport const transactionUpdateAsync = createAsyncThunk(\n  \"transactions/update\",\n  async (senData, { rejectWithValue }) => {\n    try {\n      const response = await transactionUpdate(senData);\n      return response.data;\n    } catch (error) {\n      return rejectWithValue(error);\n    }\n  }\n);\nexport const Slice = createSlice({\n  name: \"transactions\",\n  initialState,\n  reducers: {\n    clearMessage: (state) => {\n      state.message = null;\n    },\n    clearError: (state) => {\n      state.error = null;\n    },\n  },\n  extraReducers: (builder) => {\n    builder\n      .addCase(transactionsAsync.pending, (state) => {\n        state.status = \"loading\";\n      })\n      .addCase(transactionsAsync.fulfilled, (state, action) => {\n        state.status = \"idle\";\n        state.data = action.payload?.data || [];\n        state.total = action.payload?.total || 0;\n        state.totalPages = action.payload?.totalPages || 0;\n      })\n      .addCase(transactionsAsync.rejected, (state, action) => {\n        state.status = \"idle\";\n        state.error = action.payload;\n      })\n      .addCase(transactionUpdateAsync.pending, (state) => {\n        state.status = \"loading\";\n      })\n      .addCase(transactionUpdateAsync.fulfilled, (state, action) => {\n        state.status = \"idle\";\n        state.message = action.payload?.message;\n      })\n      .addCase(transactionUpdateAsync.rejected, (state, action) => {\n        state.status = \"idle\";\n        state.error = action.payload;\n      });\n  },\n});\nexport const { clearMessage, clearError, clearSuccess } = Slice.actions;\n\nexport const selectMessage = (state) => state.transactions?.message || null;\nexport const selectError = (state) => state.transactions?.error?.err || null;\nexport const selectData = (state) => state.transactions?.data || [];\nexport const selectTotal = (state) => state.transactions?.total || 0;\nexport const selectTotalPages = (state) => state.transactions?.totalPages || 0;\n\nexport default Slice.reducer;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}