{"ast":null,"code":"export const get = async queryParams => {\n  try {\n    const queryString = new URLSearchParams(queryParams).toString();\n    const response = await fetch(`/api/v1/admin/announcements?${queryString}`, {\n      method: \"GET\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      }\n    });\n    if (!response.ok) {\n      throw new Error(\"Network response was not ok\");\n    }\n    const responseData = await response.json();\n    return {\n      data: responseData\n    };\n  } catch (error) {\n    console.error(\"Error in get function:\", error);\n    return {\n      err: \"An error occurred while fetching data.\"\n    };\n  }\n};\nexport const create = async data => {\n  try {\n    const response = await fetch(`/api/v1/admin/announcements`, {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify(data)\n    });\n    if (!response.ok) {\n      const err = await response.json();\n      return {\n        data: err\n      };\n      //throw new Error(\"Network response was not ok\");\n    }\n    const responseData = await response.json();\n    return {\n      data: responseData\n    };\n  } catch (error) {\n    console.error(\"Error in updateUserData function:\", error);\n    return {\n      data: \"An error occurred while updating data.\"\n    };\n  }\n};\nexport const deleteAnouncement = async data => {\n  try {\n    const response = await fetch(`/api/v1/admin/announcements`, {\n      method: \"DELETE\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify(data)\n    });\n    if (response.ok) {\n      const responseData = await response.json();\n      return {\n        data: responseData\n      };\n    } else {\n      const err = await response.json();\n      return Promise.reject({\n        error: err\n      });\n    }\n  } catch (error) {\n    console.error(\"Error in delete function:\", error);\n    return Promise.reject({\n      error\n    });\n  }\n};","map":{"version":3,"names":["get","queryParams","queryString","URLSearchParams","toString","response","fetch","method","headers","ok","Error","responseData","json","data","error","console","err","create","body","JSON","stringify","deleteAnouncement","Promise","reject"],"sources":["/home/tarik/Downloads/frontend-la-develop/src/admin/features/announcements/announcementsAPI.js"],"sourcesContent":["export const get = async (queryParams) => {\n  try {\n    const queryString = new URLSearchParams(queryParams).toString();\n    const response = await fetch(`/api/v1/admin/announcements?${queryString}`, {\n      method: \"GET\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n    });\n\n    if (!response.ok) {\n      throw new Error(\"Network response was not ok\");\n    }\n\n    const responseData = await response.json();\n    return { data: responseData };\n  } catch (error) {\n    console.error(\"Error in get function:\", error);\n    return { err: \"An error occurred while fetching data.\" };\n  }\n};\n\nexport const create = async (data) => {\n  try {\n    const response = await fetch(`/api/v1/admin/announcements`, {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify(data),\n    });\n\n    if (!response.ok) {\n      const err = await response.json();\n      return { data: err };\n      //throw new Error(\"Network response was not ok\");\n    }\n\n    const responseData = await response.json();\n    return { data: responseData };\n  } catch (error) {\n    console.error(\"Error in updateUserData function:\", error);\n    return { data: \"An error occurred while updating data.\" };\n  }\n};\n\nexport const deleteAnouncement = async (data) => {\n  try {\n    const response = await fetch(`/api/v1/admin/announcements`, {\n      method: \"DELETE\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify(data),\n    });\n\n    if (response.ok) {\n      const responseData = await response.json();\n      return { data: responseData };\n    } else {\n      const err = await response.json();\n      return Promise.reject({ error: err });\n    }\n  } catch (error) {\n    console.error(\"Error in delete function:\", error);\n    return Promise.reject({ error });\n  }\n};\n"],"mappings":"AAAA,OAAO,MAAMA,GAAG,GAAG,MAAOC,WAAW,IAAK;EACxC,IAAI;IACF,MAAMC,WAAW,GAAG,IAAIC,eAAe,CAACF,WAAW,CAAC,CAACG,QAAQ,CAAC,CAAC;IAC/D,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAE,+BAA8BJ,WAAY,EAAC,EAAE;MACzEK,MAAM,EAAE,KAAK;MACbC,OAAO,EAAE;QACP,cAAc,EAAE;MAClB;IACF,CAAC,CAAC;IAEF,IAAI,CAACH,QAAQ,CAACI,EAAE,EAAE;MAChB,MAAM,IAAIC,KAAK,CAAC,6BAA6B,CAAC;IAChD;IAEA,MAAMC,YAAY,GAAG,MAAMN,QAAQ,CAACO,IAAI,CAAC,CAAC;IAC1C,OAAO;MAAEC,IAAI,EAAEF;IAAa,CAAC;EAC/B,CAAC,CAAC,OAAOG,KAAK,EAAE;IACdC,OAAO,CAACD,KAAK,CAAC,wBAAwB,EAAEA,KAAK,CAAC;IAC9C,OAAO;MAAEE,GAAG,EAAE;IAAyC,CAAC;EAC1D;AACF,CAAC;AAED,OAAO,MAAMC,MAAM,GAAG,MAAOJ,IAAI,IAAK;EACpC,IAAI;IACF,MAAMR,QAAQ,GAAG,MAAMC,KAAK,CAAE,6BAA4B,EAAE;MAC1DC,MAAM,EAAE,MAAM;MACdC,OAAO,EAAE;QACP,cAAc,EAAE;MAClB,CAAC;MACDU,IAAI,EAAEC,IAAI,CAACC,SAAS,CAACP,IAAI;IAC3B,CAAC,CAAC;IAEF,IAAI,CAACR,QAAQ,CAACI,EAAE,EAAE;MAChB,MAAMO,GAAG,GAAG,MAAMX,QAAQ,CAACO,IAAI,CAAC,CAAC;MACjC,OAAO;QAAEC,IAAI,EAAEG;MAAI,CAAC;MACpB;IACF;IAEA,MAAML,YAAY,GAAG,MAAMN,QAAQ,CAACO,IAAI,CAAC,CAAC;IAC1C,OAAO;MAAEC,IAAI,EAAEF;IAAa,CAAC;EAC/B,CAAC,CAAC,OAAOG,KAAK,EAAE;IACdC,OAAO,CAACD,KAAK,CAAC,mCAAmC,EAAEA,KAAK,CAAC;IACzD,OAAO;MAAED,IAAI,EAAE;IAAyC,CAAC;EAC3D;AACF,CAAC;AAED,OAAO,MAAMQ,iBAAiB,GAAG,MAAOR,IAAI,IAAK;EAC/C,IAAI;IACF,MAAMR,QAAQ,GAAG,MAAMC,KAAK,CAAE,6BAA4B,EAAE;MAC1DC,MAAM,EAAE,QAAQ;MAChBC,OAAO,EAAE;QACP,cAAc,EAAE;MAClB,CAAC;MACDU,IAAI,EAAEC,IAAI,CAACC,SAAS,CAACP,IAAI;IAC3B,CAAC,CAAC;IAEF,IAAIR,QAAQ,CAACI,EAAE,EAAE;MACf,MAAME,YAAY,GAAG,MAAMN,QAAQ,CAACO,IAAI,CAAC,CAAC;MAC1C,OAAO;QAAEC,IAAI,EAAEF;MAAa,CAAC;IAC/B,CAAC,MAAM;MACL,MAAMK,GAAG,GAAG,MAAMX,QAAQ,CAACO,IAAI,CAAC,CAAC;MACjC,OAAOU,OAAO,CAACC,MAAM,CAAC;QAAET,KAAK,EAAEE;MAAI,CAAC,CAAC;IACvC;EACF,CAAC,CAAC,OAAOF,KAAK,EAAE;IACdC,OAAO,CAACD,KAAK,CAAC,2BAA2B,EAAEA,KAAK,CAAC;IACjD,OAAOQ,OAAO,CAACC,MAAM,CAAC;MAAET;IAAM,CAAC,CAAC;EAClC;AACF,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}