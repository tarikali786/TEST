{"ast":null,"code":"export const getProftConfig = async () => {\n  const response = await fetch(`/api/v1/admin/profitconfig`, {\n    method: \"GET\",\n    headers: {\n      \"Content-Type\": \"application/json\"\n    }\n  });\n  if (response.ok) {\n    const responseData = await response.json();\n    return {\n      data: responseData\n    };\n  } else {\n    const err = await response.json();\n    return {\n      err\n    };\n  }\n};\nexport const updateProftConfig = async data => {\n  try {\n    const response = await fetch(`/api/v1/admin/profitconfig`, {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify(data)\n    });\n    if (response.ok) {\n      const responseData = await response.json();\n      return {\n        data: responseData\n      };\n    } else {\n      const err = await response.json();\n      return {\n        err\n      };\n    }\n  } catch (error) {\n    console.error(\"Error in updateUserData function:\", error);\n    return {\n      err: \"An error occurred while updating data.\"\n    };\n  }\n};","map":{"version":3,"names":["getProftConfig","response","fetch","method","headers","ok","responseData","json","data","err","updateProftConfig","body","JSON","stringify","error","console"],"sources":["/home/tarik/Downloads/frontend-la-develop/src/admin/features/investmentPackages/investmentPackagesAPI.js"],"sourcesContent":["export const getProftConfig = async () => {\n\n  const response = await fetch(`/api/v1/admin/profitconfig`, {\n    method: \"GET\",\n    headers: {\n      \"Content-Type\": \"application/json\",\n    },\n  });\n\n  if (response.ok) {\n    const responseData = await response.json();\n    return { data: responseData };\n  } else {\n    const err = await response.json();\n    return { err };\n  }\n};\n\nexport const updateProftConfig = async (data) => {\n  try {\n    const response = await fetch(`/api/v1/admin/profitconfig`, {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify(data),\n    });\n\n    if (response.ok) {\n      const responseData = await response.json();\n      return {data:responseData};\n    } else {\n      const err = await response.json();\n      return { err };\n    }\n  } catch (error) {\n    console.error(\"Error in updateUserData function:\", error);\n    return { err: \"An error occurred while updating data.\" };\n  }\n};\n"],"mappings":"AAAA,OAAO,MAAMA,cAAc,GAAG,MAAAA,CAAA,KAAY;EAExC,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAE,4BAA2B,EAAE;IACzDC,MAAM,EAAE,KAAK;IACbC,OAAO,EAAE;MACP,cAAc,EAAE;IAClB;EACF,CAAC,CAAC;EAEF,IAAIH,QAAQ,CAACI,EAAE,EAAE;IACf,MAAMC,YAAY,GAAG,MAAML,QAAQ,CAACM,IAAI,CAAC,CAAC;IAC1C,OAAO;MAAEC,IAAI,EAAEF;IAAa,CAAC;EAC/B,CAAC,MAAM;IACL,MAAMG,GAAG,GAAG,MAAMR,QAAQ,CAACM,IAAI,CAAC,CAAC;IACjC,OAAO;MAAEE;IAAI,CAAC;EAChB;AACF,CAAC;AAED,OAAO,MAAMC,iBAAiB,GAAG,MAAOF,IAAI,IAAK;EAC/C,IAAI;IACF,MAAMP,QAAQ,GAAG,MAAMC,KAAK,CAAE,4BAA2B,EAAE;MACzDC,MAAM,EAAE,MAAM;MACdC,OAAO,EAAE;QACP,cAAc,EAAE;MAClB,CAAC;MACDO,IAAI,EAAEC,IAAI,CAACC,SAAS,CAACL,IAAI;IAC3B,CAAC,CAAC;IAEF,IAAIP,QAAQ,CAACI,EAAE,EAAE;MACf,MAAMC,YAAY,GAAG,MAAML,QAAQ,CAACM,IAAI,CAAC,CAAC;MAC1C,OAAO;QAACC,IAAI,EAACF;MAAY,CAAC;IAC5B,CAAC,MAAM;MACL,MAAMG,GAAG,GAAG,MAAMR,QAAQ,CAACM,IAAI,CAAC,CAAC;MACjC,OAAO;QAAEE;MAAI,CAAC;IAChB;EACF,CAAC,CAAC,OAAOK,KAAK,EAAE;IACdC,OAAO,CAACD,KAAK,CAAC,mCAAmC,EAAEA,KAAK,CAAC;IACzD,OAAO;MAAEL,GAAG,EAAE;IAAyC,CAAC;EAC1D;AACF,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}