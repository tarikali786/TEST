{"ast":null,"code":"import { createAsyncThunk, createSlice } from \"@reduxjs/toolkit\";\nimport { claimRewardUpdate, claimRewards } from \"./claimRewardsAPI\";\nimport { PAGE_SIZE } from \"../../../Common/CONSTANTS\";\nconst initialState = {\n  message: null,\n  error: null,\n  user: {},\n  total: 0,\n  totalPages: 0,\n  success: false,\n  status: \"idle\",\n  data: []\n};\nexport const claimRewardsAsync = createAsyncThunk(\"claimRewards\", async (senData, {\n  rejectWithValue\n}) => {\n  try {\n    const response = await claimRewards(senData);\n    return response.data;\n  } catch (error) {\n    return rejectWithValue(error);\n  }\n});\nexport const claimRewardUpdateAsync = createAsyncThunk(\"claimRewards/update\", async (senData, {\n  rejectWithValue\n}) => {\n  try {\n    const response = await claimRewardUpdate(senData);\n    return response.data;\n  } catch (error) {\n    return rejectWithValue(error);\n  }\n});\nexport const Slice = createSlice({\n  name: \"claimRewards\",\n  initialState,\n  reducers: {\n    clearMessage: state => {\n      state.message = null;\n    },\n    clearError: state => {\n      state.error = null;\n    },\n    clearSuccess: state => {\n      state.success = false;\n    }\n  },\n  extraReducers: builder => {\n    builder.addCase(claimRewardsAsync.pending, state => {\n      state.status = \"loading\";\n    }).addCase(claimRewardsAsync.fulfilled, (state, action) => {\n      var _action$payload, _action$payload2, _action$payload3;\n      state.status = \"idle\";\n      state.data = ((_action$payload = action.payload) === null || _action$payload === void 0 ? void 0 : _action$payload.data) || [];\n      state.total = ((_action$payload2 = action.payload) === null || _action$payload2 === void 0 ? void 0 : _action$payload2.total) || 0;\n      state.totalPages = ((_action$payload3 = action.payload) === null || _action$payload3 === void 0 ? void 0 : _action$payload3.totalPages) || 0;\n    }).addCase(claimRewardsAsync.rejected, (state, action) => {\n      state.status = \"idle\";\n      state.error = action.payload;\n    }).addCase(claimRewardUpdateAsync.pending, state => {\n      state.status = \"loading\";\n    }).addCase(claimRewardUpdateAsync.fulfilled, (state, action) => {\n      var _action$payload4, _action$payload5;\n      state.status = \"idle\";\n      state.message = (_action$payload4 = action.payload) === null || _action$payload4 === void 0 ? void 0 : _action$payload4.message;\n      state.success = ((_action$payload5 = action.payload) === null || _action$payload5 === void 0 ? void 0 : _action$payload5.success) || false;\n      // Update the data:\n      state.data = state.data.filter(data => {\n        var _data$reward, _action$payload6;\n        return (data === null || data === void 0 ? void 0 : (_data$reward = data.reward) === null || _data$reward === void 0 ? void 0 : _data$reward._id) !== ((_action$payload6 = action.payload) === null || _action$payload6 === void 0 ? void 0 : _action$payload6.id);\n      });\n      state.total = state.data.length;\n      state.totalPages = Math.ceil(state.total / PAGE_SIZE);\n    }).addCase(claimRewardUpdateAsync.rejected, (state, action) => {\n      var _action$payload7, _action$payload7$erro;\n      state.status = \"idle\";\n      state.error = (_action$payload7 = action.payload) === null || _action$payload7 === void 0 ? void 0 : (_action$payload7$erro = _action$payload7.error) === null || _action$payload7$erro === void 0 ? void 0 : _action$payload7$erro.message;\n    });\n  }\n});\nexport const {\n  clearMessage,\n  clearError,\n  clearSuccess\n} = Slice.actions;\nexport const selectMessage = state => {\n  var _state$claimedRewards;\n  return ((_state$claimedRewards = state.claimedRewards) === null || _state$claimedRewards === void 0 ? void 0 : _state$claimedRewards.message) || null;\n};\nexport const selectError = state => {\n  var _state$claimedRewards2;\n  return ((_state$claimedRewards2 = state.claimedRewards) === null || _state$claimedRewards2 === void 0 ? void 0 : _state$claimedRewards2.error) || null;\n};\nexport const selectUser = state => {\n  var _state$claimedRewards3, _state$claimedRewards4;\n  return ((_state$claimedRewards3 = state.claimedRewards) === null || _state$claimedRewards3 === void 0 ? void 0 : (_state$claimedRewards4 = _state$claimedRewards3.user) === null || _state$claimedRewards4 === void 0 ? void 0 : _state$claimedRewards4.data) || {};\n};\nexport const selectData = state => {\n  var _state$claimedRewards5;\n  return ((_state$claimedRewards5 = state.claimedRewards) === null || _state$claimedRewards5 === void 0 ? void 0 : _state$claimedRewards5.data) || [];\n};\nexport const selectTotalUsers = state => {\n  var _state$claimedRewards6;\n  return ((_state$claimedRewards6 = state.claimedRewards) === null || _state$claimedRewards6 === void 0 ? void 0 : _state$claimedRewards6.total) || [];\n};\nexport const selectTotalPages = state => {\n  var _state$claimedRewards7;\n  return ((_state$claimedRewards7 = state.claimedRewards) === null || _state$claimedRewards7 === void 0 ? void 0 : _state$claimedRewards7.totalPages) || 0;\n};\nexport default Slice.reducer;","map":{"version":3,"names":["createAsyncThunk","createSlice","claimRewardUpdate","claimRewards","PAGE_SIZE","initialState","message","error","user","total","totalPages","success","status","data","claimRewardsAsync","senData","rejectWithValue","response","claimRewardUpdateAsync","Slice","name","reducers","clearMessage","state","clearError","clearSuccess","extraReducers","builder","addCase","pending","fulfilled","action","_action$payload","_action$payload2","_action$payload3","payload","rejected","_action$payload4","_action$payload5","filter","_data$reward","_action$payload6","reward","_id","id","length","Math","ceil","_action$payload7","_action$payload7$erro","actions","selectMessage","_state$claimedRewards","claimedRewards","selectError","_state$claimedRewards2","selectUser","_state$claimedRewards3","_state$claimedRewards4","selectData","_state$claimedRewards5","selectTotalUsers","_state$claimedRewards6","selectTotalPages","_state$claimedRewards7","reducer"],"sources":["/home/tarik/Downloads/frontend-la-develop/src/admin/features/claimRewards/claimRewardsSlice.js"],"sourcesContent":["import { createAsyncThunk, createSlice } from \"@reduxjs/toolkit\";\nimport { claimRewardUpdate, claimRewards } from \"./claimRewardsAPI\";\nimport { PAGE_SIZE } from \"../../../Common/CONSTANTS\";\n\nconst initialState = {\n  message: null,\n  error: null,\n  user: {},\n  total: 0,\n  totalPages: 0,\n  success: false,\n  status: \"idle\",\n  data: [],\n};\nexport const claimRewardsAsync = createAsyncThunk(\n  \"claimRewards\",\n  async (senData, { rejectWithValue }) => {\n    try {\n      const response = await claimRewards(senData);\n      return response.data;\n    } catch (error) {\n      return rejectWithValue(error);\n    }\n  }\n);\nexport const claimRewardUpdateAsync = createAsyncThunk(\n  \"claimRewards/update\",\n  async (senData, { rejectWithValue }) => {\n    try {\n      const response = await claimRewardUpdate(senData);\n      return response.data;\n    } catch (error) {\n      return rejectWithValue(error);\n    }\n  }\n);\nexport const Slice = createSlice({\n  name: \"claimRewards\",\n  initialState,\n  reducers: {\n    clearMessage: (state) => {\n      state.message = null;\n    },\n    clearError: (state) => {\n      state.error = null;\n    },\n    clearSuccess: (state) => {\n      state.success = false;\n    },\n  },\n  extraReducers: (builder) => {\n    builder\n      .addCase(claimRewardsAsync.pending, (state) => {\n        state.status = \"loading\";\n      })\n      .addCase(claimRewardsAsync.fulfilled, (state, action) => {\n        state.status = \"idle\";\n        state.data = action.payload?.data || [];\n        state.total = action.payload?.total || 0;\n        state.totalPages = action.payload?.totalPages || 0;\n      })\n      .addCase(claimRewardsAsync.rejected, (state, action) => {\n        state.status = \"idle\";\n        state.error = action.payload;\n      })\n      .addCase(claimRewardUpdateAsync.pending, (state) => {\n        state.status = \"loading\";\n      })\n      .addCase(claimRewardUpdateAsync.fulfilled, (state, action) => {\n        state.status = \"idle\";\n        state.message = action.payload?.message;\n        state.success = action.payload?.success || false;\n        // Update the data:\n        state.data = state.data.filter(\n          (data) => data?.reward?._id !== action.payload?.id\n        );\n        state.total = state.data.length;\n        state.totalPages = Math.ceil(state.total / PAGE_SIZE);\n      })\n      .addCase(claimRewardUpdateAsync.rejected, (state, action) => {\n        state.status = \"idle\";\n        state.error = action.payload?.error?.message;\n      });\n  },\n});\nexport const { clearMessage, clearError, clearSuccess } = Slice.actions;\nexport const selectMessage = (state) => state.claimedRewards?.message || null;\nexport const selectError = (state) => state.claimedRewards?.error || null;\nexport const selectUser = (state) => state.claimedRewards?.user?.data || {};\nexport const selectData = (state) => state.claimedRewards?.data || [];\nexport const selectTotalUsers = (state) => state.claimedRewards?.total || [];\nexport const selectTotalPages = (state) =>\n  state.claimedRewards?.totalPages || 0;\n\nexport default Slice.reducer;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}